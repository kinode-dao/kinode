interface chess {
    /// Our "chess protocol" request/response format. We'll always serialize these
    /// to a byte vector and send them over IPC.
    variant request {
        /// lazy-load-blob: none.
        new-game(new-game-request),
        /// lazy-load-blob: none.
        move(move-request),
        /// lazy-load-blob: none.
        resign(string),
    }

    variant response {
        /// lazy-load-blob: none.
        new-game-accepted,
        /// lazy-load-blob: none.
        new-game-rejected,
        /// lazy-load-blob: none.
        move-accepted,
        /// lazy-load-blob: none.
        move-rejected,
    }

    record new-game-request {
        white: string,
        black: string,
    }

    record move-request {
        game-id: string,
        move-str: string,
    }
}

world chess-sys-v0 {
    import chess;
    include process-v1;
}
